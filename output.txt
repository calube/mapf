pacman start position:  (2, 1)
ghost1 start position:  (1, 3)
ghost2 start position:  (3, 1)
look here:  [[], ['South'], ['West', 'West']]
solution:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
{'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': []}
p =  <game.ConstraintTree instance at 0x10a237b48>
test_data:  {'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': []}
test:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]

 
 
m =  1
pSolution:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
pConstraints:  []
pCost:  2
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
LENGTH PACMAN:  2
LENGTH GHOST 1:  2
LENGTH GHOST 2:  2
ghost2Path in createPathWithCords:  ['West', 'West']
ghost2Path:  [(3, 1), (2.0, 1.0), (1.0, 1.0)]
len(ghost2Path):  3
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
LENGTH PACMAN:  2
LENGTH GHOST 1:  2
LENGTH GHOST 2:  2
ghost2Path in createPathWithCords:  ['West', 'West']
conflict occured:  (0, 2, (2, 1), 1)
conflict from cbs:  [(0, 2, (2, 1), 1)]
agents in conflict:  [0, 2]
len agents:  2
agents:  [0, 2]
ai:  0
pConstraints:  []
aConstraints in CBS:  [(0, (2, 1), 1)]
constraints in reconstructPathWithConstraints:  [(0, (2, 1), 1)]
agent:  0
constraints in singleAgentAstarSearchWithConstraints:  [(0, (2, 1), 1)]
currentNode == goal
nodeActions after testing?  []
aSolution:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
solution_with_conflict:  ['Stop', 'Stop']
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
LENGTH PACMAN:  2
LENGTH GHOST 1:  2
LENGTH GHOST 2:  2
ghost2Path in createPathWithCords:  ['West', 'West']
agent_path:  ['Stop', 'Stop']
path:  [(2, 1), (2, 1), (2, 1)]
constraints:  (0, (2, 1), 1)
NO
test_aSolution:  [['Stop', 'Stop'], [(0, (2, 1), 1)]]
aSolution after singleAgentRecoveryMethod:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
LENGTH PACMAN:  2
LENGTH GHOST 1:  2
LENGTH GHOST 2:  2
ghost2Path in createPathWithCords:  ['West', 'West']
ghost2Path:  [(3, 1), (2.0, 1.0), (1.0, 1.0)]
len(ghost2Path):  3
aConstraints:  [(0, (2, 1), 1)] back_chain_constraints:  [(0, (2, 1), 1)] pConstraints:  []
new_aData for real maybe?:  {'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': [(0, (2, 1), 1)]}
jj =  1
p's left child:  {'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': [(0, (2, 1), 1)]}
getting root value from CT:  {'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': []}
getting root value from p:  {'cost': 2, 'solution': [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']], 'constraints': [(0, (2, 1), 1)]}
pSolution:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
aSolution:  [['Stop', 'Stop'], ['South', 'Stop'], ['West', 'West']]
pConstraints:  []
aConstraints:  [(0, (2, 1), 1)]
pCost:  2
aCost:  2
agents:  [0, 2]
ai:  2
pConstraints:  []
aConstraints in CBS:  [(2, (2, 1), 1)]
constraints in reconstructPathWithConstraints:  [(2, (2, 1), 1)]
agent:  2
constraints in singleAgentAstarSearchWithConstraints:  [(2, (2, 1), 1)]
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(2, 1), 1]]
pair:  [(3, 2), 1]
pair:  [(2, 1), 1]
found a pair that is a conflict successor!
pair:  [(3, 1), 1]

 

Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(2, 1), 1]]
pair:  [(3, 3), 2]
pair:  [(3, 1), 2]
pair:  [(2, 2), 2]
pair:  [(3, 2), 2]

 

Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(2, 1), 1]]
pair:  [(2, 3), 3]
pair:  [(2, 1), 3]
pair:  [(3, 2), 3]
pair:  [(1, 2), 3]
pair:  [(2, 2), 3]

 

Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(2, 1), 1]]
pair:  [(1, 3), 4]
pair:  [(1, 1), 4]
pair:  [(2, 2), 4]
pair:  [(1, 2), 4]

 

currentNode == goal
nodeActions after testing?  ['North', 'West', 'West', 'South']
aSolution:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
solution_with_conflict:  ['North', 'West', 'West', 'South']
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
agent_path:  ['North', 'West', 'West', 'South']
path:  [(3, 1), (3.0, 2.0), (2.0, 2.0), (1.0, 2.0), (1.0, 1.0)]
constraints:  (2, (2, 1), 1)
NO
test_aSolution:  [['North', 'West', 'West', 'South'], [(2, (2, 1), 1)]]
aSolution after singleAgentRecoveryMethod:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
ghost2Path:  [(3, 1), (3.0, 2.0), (2.0, 2.0), (1.0, 2.0), (1.0, 1.0)]
len(ghost2Path):  5
aConstraints:  [(2, (2, 1), 1)] back_chain_constraints:  [(2, (2, 1), 1)] pConstraints:  []
new_aData for real maybe?:  {'cost': 4, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(2, (2, 1), 1)]}
jj =  2
getting root value from CT:  {'cost': 2, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(0, (2, 1), 1)]}
getting root value from p:  {'cost': 2, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(0, (2, 1), 1)]}
p's right child:  {'cost': 4, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(2, (2, 1), 1)]}
getting root value from CT:  {'cost': 2, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(0, (2, 1), 1)]}
getting root value from p:  {'cost': 4, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(2, (2, 1), 1)]}
pSolution:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
aSolution:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
pConstraints:  []
aConstraints:  [(2, (2, 1), 1)]
pCost:  2
aCost:  4
p =  <game.ConstraintTree instance at 0x10a237b48>
test_data:  {'cost': 4, 'solution': [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']], 'constraints': [(2, (2, 1), 1)]}
test:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]

 
 
m =  2
pSolution:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
pConstraints:  [(2, (2, 1), 1)]
pCost:  4
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
ghost2Path:  [(3, 1), (3.0, 2.0), (2.0, 2.0), (1.0, 2.0), (1.0, 1.0)]
len(ghost2Path):  5
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
conflict occured:  (1, 2, (1.0, 2.0), 3)
conflict from cbs:  [(1, 2, (1.0, 2.0), 3)]
agents in conflict:  [1, 2]
len agents:  2
agents:  [1, 2]
ai:  1
pConstraints:  [(2, (2, 1), 1)]
aConstraints in CBS:  [(1, (1.0, 2.0), 3), (2, (2, 1), 1)]
constraints in reconstructPathWithConstraints:  [(1, (1.0, 2.0), 3), (2, (2, 1), 1)]
agent:  1
constraints in singleAgentAstarSearchWithConstraints:  [(1, (1.0, 2.0), 3), (2, (2, 1), 1)]
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(2, 1), 1]]
pair:  [(1, 2), 1]
pair:  [(2, 3), 1]
pair:  [(1, 3), 1]

 

currentNode == goal
nodeActions after testing?  ['South']
aSolution:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
solution_with_conflict:  ['South', 'Stop', 'Stop', 'Stop']
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['South', 'Stop', 'Stop', 'Stop'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
agent_path:  ['South', 'Stop', 'Stop', 'Stop']
path:  [(1, 3), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0)]
constraints:  (1, (1.0, 2.0), 3)
YES
entered singleAgentRecoveryMethod for agent  1
agent:  1 path:  [(1, 3), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0)] constraints:  [(1, (1.0, 2.0), 3), (2, (2, 1), 1)] goal:  (1, 2)
path:  [(1, 3), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0), (1.0, 2.0)]
constraints:  (1, (1.0, 2.0), 3)
constraintList in checkSingleAgentPathForBackChaining:  [(1, (1.0, 2.0), 3), (1, (1.0, 2.0), 2), (1, (1.0, 2.0), 1)]
back_chain_constraints:  [(1, (1.0, 2.0), 3), (1, (1.0, 2.0), 2), (1, (1.0, 2.0), 1)]
agent:  1
constraints in singleAgentSearchAfterBackChain:  [(1, (1.0, 2.0), 3), (1, (1.0, 2.0), 2), (1, (1.0, 2.0), 1)]
constraintTable:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(1, 2), 1]
found a pair that is a conflict successor!
pair:  [(2, 3), 1]
pair:  [(1, 3), 1]
successors:  [((2, 3), 'East', 1), ((1, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 3), 1]
test is not in constraintTable:  [(1, 3), 1]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(1, 2), 2]
found a pair that is a conflict successor!
pair:  [(2, 3), 2]
pair:  [(1, 3), 2]
successors:  [((2, 3), 'East', 1), ((1, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 3), 2]
test is not in constraintTable:  [(1, 3), 2]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(1, 2), 3]
found a pair that is a conflict successor!
pair:  [(2, 3), 3]
pair:  [(1, 3), 3]
successors:  [((2, 3), 'East', 1), ((1, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 3), 3]
test is not in constraintTable:  [(1, 3), 3]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(2, 2), 2]
pair:  [(3, 3), 2]
pair:  [(1, 3), 2]
pair:  [(2, 3), 2]
successors:  [((2, 2), 'South', 1), ((3, 3), 'East', 1), ((1, 3), 'West', 1), ((2, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 2), 2]
test is not in constraintTable:  [(3, 3), 2]
test is not in constraintTable:  [(1, 3), 2]
test is not in constraintTable:  [(2, 3), 2]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(1, 2), 3]
found a pair that is a conflict successor!
pair:  [(2, 3), 3]
pair:  [(1, 3), 3]
successors:  [((2, 3), 'East', 1), ((1, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 3), 3]
test is not in constraintTable:  [(1, 3), 3]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(2, 3), 3]
pair:  [(2, 1), 3]
pair:  [(3, 2), 3]
pair:  [(1, 2), 3]
found a pair that is a conflict successor!
pair:  [(2, 2), 3]
successors:  [((2, 3), 'North', 1), ((2, 1), 'South', 1), ((3, 2), 'East', 1), ((2, 2), 'Stop', 1)]

 

test is not in constraintTable:  [(2, 3), 3]
test is not in constraintTable:  [(2, 1), 3]
test is not in constraintTable:  [(3, 2), 3]
test is not in constraintTable:  [(2, 2), 3]
z =  1
Entered getSuccessorWithConstraints function
constraintTable in getSuccessorWithConstraints:  [[(1.0, 2.0), 3], [(1.0, 2.0), 2], [(1.0, 2.0), 1]]
pair:  [(1, 2), 4]
pair:  [(2, 3), 4]
pair:  [(1, 3), 4]
successors:  [((1, 2), 'South', 1), ((2, 3), 'East', 1), ((1, 3), 'Stop', 1)]

 

test is not in constraintTable:  [(1, 2), 4]
test is not in constraintTable:  [(2, 3), 4]
test is not in constraintTable:  [(1, 3), 4]
z =  1
currentNode == goal
nodeActions after testing?  ['East', 'West', 'Stop', 'South']
new_path nigga:  ['East', 'West', 'Stop', 'South']
test_aSolution:  [['East', 'West', 'Stop', 'South'], [(1, (1.0, 2.0), 3), (1, (1.0, 2.0), 2), (1, (1.0, 2.0), 1)]]
aSolution after singleAgentRecoveryMethod:  [['Stop', 'Stop', 'Stop', 'Stop'], ['East', 'West', 'Stop', 'South'], ['North', 'West', 'West', 'South']]
agentPaths in CORDS FUNCTION:  [['Stop', 'Stop', 'Stop', 'Stop'], ['East', 'West', 'Stop', 'South'], ['North', 'West', 'West', 'South']]
LENGTH PACMAN:  4
LENGTH GHOST 1:  4
LENGTH GHOST 2:  4
ghost2Path in createPathWithCords:  ['North', 'West', 'West', 'South']
ghost2Path:  [(3, 1), (3.0, 2.0), (2.0, 2.0), (1.0, 2.0), (1.0, 1.0)]
len(ghost2Path):  5
CBS SUCCESS!!!
new_path:  [['Stop', 'Stop', 'Stop', 'Stop'], ['East', 'West', 'Stop', 'South'], ['North', 'West', 'West', 'South']]
