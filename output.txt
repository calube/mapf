1
current node:  (9, 1)  node action:  []
successor:  [((10, 1), 'East', 1), ((8, 1), 'West', 1)]
current node:  (9, 1)
child Node:  (10, 1)  direction:  East
closedList:  [(9, 1)]
childNode:  (10, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  9
g-value:  0
 
 
 
 
 
current node:  (9, 1)
child Node:  (8, 1)  direction:  West
closedList:  [(9, 1)]
childNode:  (8, 1) direction:  West step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  11
g-value:  1
 
 
 
 
 
2
current node:  (10, 1)  node action:  ['East']
successor:  [((11, 1), 'East', 1), ((9, 1), 'West', 1)]
current node:  (10, 1)
child Node:  (11, 1)  direction:  East
closedList:  [(9, 1), (10, 1)]
childNode:  (11, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  9
g-value:  2
 
 
 
 
 
3
current node:  (11, 1)  node action:  ['East', 'East']
successor:  [((12, 1), 'East', 1), ((10, 1), 'West', 1)]
current node:  (11, 1)
child Node:  (12, 1)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1)]
childNode:  (12, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  9
g-value:  3
 
 
 
 
 
4
current node:  (12, 1)  node action:  ['East', 'East', 'East']
successor:  [((13, 1), 'East', 1), ((11, 1), 'West', 1)]
current node:  (12, 1)
child Node:  (13, 1)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1)]
childNode:  (13, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  9
g-value:  4
 
 
 
 
 
5
current node:  (13, 1)  node action:  ['East', 'East', 'East', 'East']
successor:  [((13, 2), 'North', 1), ((12, 1), 'West', 1)]
current node:  (13, 1)
child Node:  (13, 2)  direction:  North
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1)]
childNode:  (13, 2) direction:  North step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  11
g-value:  5
 
 
 
 
 
6
current node:  (8, 1)  node action:  ['West']
successor:  [((9, 1), 'East', 1), ((7, 1), 'West', 1)]
current node:  (8, 1)
child Node:  (7, 1)  direction:  West
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1)]
childNode:  (7, 1) direction:  West step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  6
 
 
 
 
 
7
current node:  (13, 2)  node action:  ['East', 'East', 'East', 'East', 'North']
successor:  [((13, 3), 'North', 1), ((13, 1), 'South', 1)]
current node:  (13, 2)
child Node:  (13, 3)  direction:  North
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2)]
childNode:  (13, 3) direction:  North step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  7
 
 
 
 
 
8
current node:  (7, 1)  node action:  ['West', 'West']
successor:  [((8, 1), 'East', 1), ((6, 1), 'West', 1)]
current node:  (7, 1)
child Node:  (6, 1)  direction:  West
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1)]
childNode:  (6, 1) direction:  West step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  15
g-value:  8
 
 
 
 
 
9
current node:  (13, 3)  node action:  ['East', 'East', 'East', 'East', 'North', 'North']
successor:  [((13, 4), 'North', 1), ((13, 2), 'South', 1), ((14, 3), 'East', 1), ((12, 3), 'West', 1)]
current node:  (13, 3)
child Node:  (13, 4)  direction:  North
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3)]
childNode:  (13, 4) direction:  North step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  15
g-value:  9
 
 
 
 
 
current node:  (13, 3)
child Node:  (14, 3)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3)]
childNode:  (14, 3) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  10
 
 
 
 
 
current node:  (13, 3)
child Node:  (12, 3)  direction:  West
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3)]
childNode:  (12, 3) direction:  West step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  15
g-value:  11
 
 
 
 
 
10
current node:  (14, 3)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East']
successor:  [((15, 3), 'East', 1), ((13, 3), 'West', 1)]
current node:  (14, 3)
child Node:  (15, 3)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3)]
childNode:  (15, 3) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  12
 
 
 
 
 
11
current node:  (15, 3)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East']
successor:  [((15, 2), 'South', 1), ((16, 3), 'East', 1), ((14, 3), 'West', 1)]
current node:  (15, 3)
child Node:  (15, 2)  direction:  South
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3)]
childNode:  (15, 2) direction:  South step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  13
 
 
 
 
 
current node:  (15, 3)
child Node:  (16, 3)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3)]
childNode:  (16, 3) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  14
 
 
 
 
 
12
current node:  (15, 2)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South']
successor:  [((15, 3), 'North', 1), ((15, 1), 'South', 1)]
current node:  (15, 2)
child Node:  (15, 1)  direction:  South
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3), (15, 2)]
childNode:  (15, 1) direction:  South step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  15
 
 
 
 
 
13
current node:  (15, 1)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South']
successor:  [((15, 2), 'North', 1), ((16, 1), 'East', 1)]
current node:  (15, 1)
child Node:  (16, 1)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3), (15, 2), (15, 1)]
childNode:  (16, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  16
 
 
 
 
 
14
current node:  (16, 1)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South', 'East']
successor:  [((17, 1), 'East', 1), ((15, 1), 'West', 1)]
current node:  (16, 1)
child Node:  (17, 1)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3), (15, 2), (15, 1), (16, 1)]
childNode:  (17, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  17
 
 
 
 
 
15
current node:  (16, 3)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'East']
successor:  [((16, 4), 'North', 1), ((15, 3), 'West', 1)]
current node:  (16, 3)
child Node:  (16, 4)  direction:  North
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3), (15, 2), (15, 1), (16, 1), (16, 3)]
childNode:  (16, 4) direction:  North step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  15
g-value:  18
 
 
 
 
 
16
current node:  (17, 1)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South', 'East', 'East']
successor:  [((18, 1), 'East', 1), ((16, 1), 'West', 1)]
current node:  (17, 1)
child Node:  (18, 1)  direction:  East
closedList:  [(9, 1), (10, 1), (11, 1), (12, 1), (13, 1), (8, 1), (13, 2), (7, 1), (13, 3), (14, 3), (15, 3), (15, 2), (15, 1), (16, 1), (16, 3), (17, 1)]
childNode:  (18, 1) direction:  East step cost:  1
comparing f_value to tempGoal:   f_value:  9  tempGoal:  13
g-value:  19
 
 
 
 
 
17
current node:  (18, 1)  node action:  ['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South', 'East', 'East', 'East']
TESTING SOMETHING:  [['East', 'East', 'East', 'East', 'North', 'North', 'East', 'East', 'South', 'South', 'East', 'East', 'East']]
